{"version":3,"sources":["../src/constants.js","../src/errors.js","../src/utils/html.js","../src/utils/classNames.js","../src/components/Slider.js","../src/utils/validators.js","../src/utils/objectDiff.js","../src/utils/pick.js","../src/utils/debounce.js","index.js"],"names":["const","TRANSITION","SLIDE","FADE","DEFAULT_OPTIONS","appendArrows","appendDots","arrows","autoplay","autoplaySpeed","dots","infinite","nextArrow","pauseOnHover","prevArrow","responsive","slidesToShow","slidesToScroll","speed","transition","_forceAppendPrevArrow","_forceAppendNextArrow","draggable","rtl","KrouselError","constructor","code","errorCode","Error","ATTR_MAP","className","htmlUtils","tag","attrs","children","element","document","createElement","Object","entries","forEach","setAttribute","attr","Array","child","appendChild","classNames","classes","filter","x","join","TRANSITION_CLASS","isInstance","value","klass","VALID_TRANSITIONS","values","VALID_BP_PROPS","Slider","target","options","_setupOptions","cleanOpts","assign","sendWarn","optName","expected","actual","console","warn","HTMLElement","name","prototype","includes","resultConf","sort","a","b","breakpoint","_target","targetArg","result","getElementById","_initialized","_currentPage","_showPrev","this","bind","_showNext","_enableTransition","_handleResize","_stopAutoplay","_startAutoplay","_resumeAutoplay","_pauseAutoplay","_doAutoplay","_requestNext","_requestPrev","_requestGoTo","_computeOptions","_computeProps","_setupDOM","obj1","obj2","bpConfig","obj","conf","window","innerWidth","settings","reduce","acc","k","hasOwnProperty","_breakpoint","newOptions","_options","from","Set","keys","concat","key","_setCssVar","style","setProperty","_slideCount","_track","querySelectorAll","length","childElementCount","_pageCount","Math","ceil","min","_clonePerSide","props","classList","add","transitionDuration","map","replace","s","toLowerCase","v","_disableTransition","_trackContainer","_setupArrowsDOM","_setupDotsDOM","_computeSize","_setupInfiniteDOM","_computeSlidesClasses","__forceReflow","_setupListeners","slides","firstSlide","firstChild","cloneList","clonesStart","slice","clone","cloneNode","insertBefore","_prevArrow","_nextArrow","insertTarget","isConnected","_dots","remove","dotsItems","fill","__","callback","delay","timeout","addEventListener","clearTimeout","setTimeout","args","d","i","handleMouseOut","e","currentTarget","contains","relatedTarget","slide","_apStopped","_autoplayTimer","optionsChanged","_processOptionsChange","_goToPage","some","_cleanUpDOM","slideIndex","highlightIndex","domIdx","push","item","_computeArrowClasses","dotItems","pageIndex","__goToPage_defer","postProcess","finalPageIndex","max","__goToPage_timer","_reflowTrash","offsetHeight","cloneCount","slideWidth","clientWidth","width","index","makeKrousel","count","config","section","sectionTitle","innerHTML","configDesc","JSON","stringify","title","toString","color","round","backgroundColor","append","Krousel","CONFIGS","querySelector"],"mappings":";AAAOA,IAAMC,EAAa,CACxBC,MAAO,QACPC,KAAM,QAGKC,EAAkB,CAE7BC,aAAc,KAEdC,WAAY,KAEZC,QAAAA,EAEAC,UAAAA,EAEAC,cAAe,IAEfC,MAAAA,EAEAC,UAAAA,EAEAC,UAAW,KAEXC,cAAAA,EAEAC,UAAW,KAEXC,WAAY,KAEZC,aAAc,EAEdC,eAAgB,EAEhBC,MAAO,IAGPC,WAAYlB,EAAWC,MAEvBkB,uBAAAA,EACAC,uBAAAA,EAGAC,WAAAA,EACAC,KAAAA,GC3CmBC,EAAAA,SAAAA,GACnBC,SAAAA,EAAYC,GAAAA,EAAAA,KAAAA,MAAAA,KAELC,UAAYD,EAAAA,OAAAA,IAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,YAAAA,YAAAA,EAAAA,EAHAF,CAAqBI,OCApCC,EAAW,CACfC,UAAW,SAGPC,EAAAA,SAYUC,EAAKC,EAAYC,QAAAA,IAAAA,IAAAA,EAAJ,SAAA,IAAA,IAAA,EAAe,MACpCC,IAAAA,EAAUC,SAASC,cAAcL,GACrCM,OAAAA,OAAOC,QAAQN,GAAOO,QAAAA,SAAAA,GAAAA,IAAAA,EAAAA,EAAAA,GAEpBL,EAAQM,aADUZ,EAASa,IAASA,EAAAA,EAAAA,MAGlCR,IACEA,aAAoBS,MACtBT,EAASM,QAAAA,SAASI,GAAUT,OAAAA,EAAQU,YAAYD,KAEhDT,EAAQU,YAAYX,IAGjBC,GAAAA,SC7BaW,IAAAA,IAAAA,IAAAA,EAAAA,GAAAA,EAAAA,UAAAA,OAAAA,KAAAA,EAAAA,GAAAA,UAAAA,GACfC,OAAAA,EAAQC,OAAAA,SAAQC,GAAAA,QAAQA,IAAGC,KAAK,KCYzClD,IAAMmD,EAAmB,GAAA,EACtBlD,EAAWC,OJ8CK,aAAA,EI7ChBD,EAAWE,MJ8CI,YI3CViD,IAAAA,EClBD,SAAoBC,EAAOC,GACzBD,OAAAA,aAAiBC,GD+BpBC,EAAoBjB,OAAOkB,OAAOvD,GAwClCwD,EAAiB,CAAC,eAAgB,iBAAkB,YA6BrCC,EACnBjC,SAAYkC,EAAQC,GACbC,KAAAA,cAtET,SAAsBD,GAChBE,IAAAA,EAAYxB,OAAOyB,OAAO,GAAIH,GAE5BI,EAAAA,SAAYC,EAASC,EAAUC,GACnCC,OAAAA,QAAQC,KAAAA,6BACuBJ,EAAAA,+BAAsCC,EAAAA,UAAkBC,IAAAA,EAAAA,EAAAA,WAAAA,EAAAA,EAAAA,WAIrF7D,IAAe8C,EAAW9C,EAAYgE,eAMxCN,EAAS,aAAc,cAHpB1D,EAAWmB,aAAenB,EAAWmB,YAAY8C,MACjDjE,EAAWkE,WAAalE,EAAWkE,UAAUD,MAC9CjE,UAEKwD,EAAUxD,YAGfa,IAAeoC,EAAkBkB,SAAStD,KAC5C6C,EAAS,aAAA,SAAuBT,EAAkBL,KAAK,KAAQ/B,UACxD2C,EAAU3C,YAIfuD,IAAAA,EAAapC,OAAOyB,OAAO,GAAI3D,EAAiB0D,GAEhDY,OAAAA,EAAW3D,YAEb2D,EAAW3D,WAAW4D,KAAAA,SAAMC,EAAGC,GAAMD,OAAAA,EAAEE,WAAaD,EAAEC,aAGjDJ,EAhCT,CAsEsCd,GAAAA,KAC7BmB,QApFT,SAAmBC,GACbC,IAAAA,EAASD,EACY,GAAA,iBAAdA,EACTC,EAAS7C,SAAS8C,eAAeF,OAC5B,CAAA,IAAI5B,EAAW4B,EAAWV,aAAAA,MAGzB,IAAI9C,EHnBgB,GGiB1ByD,EAASD,EAIJC,OAAAA,EATT,CAoF6BtB,GAAAA,KAGpBwB,cAAAA,EAAe,KACfC,aAAe,EAAA,KAEfC,UAAYC,KAAKD,UAAUE,KAAKD,MAAAA,KAChCE,UAAYF,KAAKE,UAAUD,KAAKD,MAAAA,KAChCG,kBAAoBH,KAAKG,kBAAkBF,KAAKD,MAAAA,KAChDI,cAAgBJ,KAAKI,cAAcH,KAAKD,MAAAA,KACxCK,cAAgBL,KAAKK,cAAcJ,KAAKD,MAAAA,KACxCM,eAAiBN,KAAKM,eAAeL,KAAKD,MAAAA,KAC1CO,gBAAkBP,KAAKO,gBAAgBN,KAAKD,MAAAA,KAC5CQ,eAAiBR,KAAKQ,eAAeP,KAAKD,MAAAA,KAC1CS,YAAcT,KAAKS,YAAYR,KAAKD,MAAAA,KACpCU,aAAeV,KAAKU,aAAaT,KAAKD,MAAAA,KACtCW,aAAeX,KAAKW,aAAaV,KAAKD,MAAAA,KACtCY,aAAeZ,KAAKY,aAAaX,KAAKD,MAAAA,KAEtCa,kBAAAA,KACAC,gBAAAA,KACAC,YAAAA,KACAlB,cAAAA,EAAe,KACfS,kBAAAA,EAAAA,UAGPO,gBAAAA,WE5HiCG,IAAAA,EAAMC,EF6HjCtB,EAAS,GACPuB,EArDV,SAA6B5C,GGzEA6C,IAAAA,EAAAA,EAAAA,EAAAA,WH2EvBD,EAAW,KACXzF,GAAAA,EAAY,CAAA,IAAA,IAAA,EAAA,EAAA,EAEGA,EAAAA,EAAAA,EAAAA,OAAAA,GAAAA,EAAY,CAApB2F,IAAAA,EAAAA,EAAAA,GACHC,GAAAA,OAAOC,YAAcF,EAAK5B,WAAY,CAIxC0B,EAAWE,EAAAA,OAIXF,IAEFA,EAASK,UGzFcJ,EHyFED,EAASK,SAAUpD,EGxFnCqD,OAAAA,SAAQC,EAAKC,GACpBP,OAAAA,EAAIQ,eAAeD,KACrBD,EAAIC,GAAKP,EAAIO,IAERD,GACN,MHsFIP,OAAAA,EAnBT,CAqDyClB,KAAKzB,eACtC2C,GAAAA,IAAalB,KAAK4B,YAAa,CAC3BC,IAAAA,EAAa7E,OAAOyB,OACxB,GACAuB,KAAKzB,cACL2C,GAAYA,EAASK,UAGdO,KAAAA,WEtIoBd,EFuIPhB,KAAK8B,SEvIQb,EFuIEY,EAAnClC,EEtIQtC,MAAM0E,KAClB,IAAIC,IAAIhF,OAAOiF,KAAKjB,GAAMkB,OAAOlF,OAAOiF,KAAKhB,MAEhCO,OAAAA,SAAQC,EAAKU,GACtBnB,OAAAA,EAAKmB,KAASlB,EAAKkB,KAAMV,EAAIU,GAAOlB,EAAKkB,IACtCV,GACN,KAAA,KFmIMG,YAAcV,EAAAA,KACdY,SAAWD,EAEXlC,OAAAA,GAAAA,EAAAA,UAGTyC,WAAAA,SAAWnD,EAAMlB,GACV0B,KAAAA,QAAQ4C,MAAMC,YAAYrD,EAAMlB,IAAAA,EAAAA,UAGvC+C,cAAAA,WAAAA,IAAAA,EACqDd,KAAK8B,SAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,aAAAA,EAAAA,EAAAA,eAKjDS,KAAAA,YAJFvC,KAAKH,aAIWG,KAAKwC,OAAOC,iBADb,iCACwCC,OAHvC1C,KAAKP,QAAQkD,kBAAAA,KAK7BC,WAAaC,KAAKC,MACpB9C,KAAKuC,YAAc5G,EAAiBD,GAAgBC,GAAAA,KAGlDmE,aAAe+C,KAAKE,IAAI/C,KAAKF,aAAcE,KAAK4C,WAAa,GAAA,KAC7DI,cAAgB3H,EAAW,EAAIK,EAAe,GAAA,EAAA,UAOrDqF,UAAAA,WF/IUkC,IAAAA,EAAAA,EAAAA,KAAAA,EEgJgCjD,KAAK8B,SAAAA,EAAAA,EAAAA,WAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,SAEvClF,EAAWS,MAAM0E,KAAK/B,KAAKP,QAAQ7C,UAEpC6C,KAAAA,QAAQyD,UAAUC,IJpInB,WAAA,KIsICX,OAAS/F,EAAwB,MAAO,CAC3CD,UAAWgB,EJrIR,UIqIkCK,EAAiBhC,IACtDwG,OFxJMY,EEwJqB,CACzBG,mBAAuBxH,EAAAA,MFxJpBoB,OAAOC,QAAQgG,GACnBI,IAAAA,SAAAA,GAAAA,IAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,GACeC,QAAQ,SAAA,SAAWC,GAAM,MAAA,IAAMA,EAAEC,gBAAAA,IAC9BC,IAElB7F,KAAK,QAAA,KEsJH8F,qBAAAA,KAEAC,gBAAkBlH,EACrB,MACA,CACED,UJhJU,qBIkJZwD,KAAKwC,QAAAA,KAGF/C,QAAQlC,YAAYyC,KAAK2D,iBAAAA,KAEzBC,kBAAAA,KACAC,gBAAAA,KAEAzB,WJxIQ,eIwI2BpC,KAAKgD,eAAAA,KAExCc,eAELlH,EAASM,QAAAA,SAASI,GACZA,aAAiB0B,cACnB1B,EAAM4F,UAAUC,IJ9Jf,WAAA,EI+JIX,OAAOjF,YAAYD,MAIxBjC,GAAAA,KACG0I,oBAAAA,KAGFC,sBAAsB,GAAA,KAGtBC,gBAAAA,KACA9D,oBAAAA,KAGA+D,mBAAAA,EAAAA,UAGPH,kBAAAA,WAAAA,IAAAA,IAAAA,EAAAA,KACQI,EAAS9G,MAAM0E,KACnB/B,KAAKwC,OAAOC,iBAAAA,aAER2B,EAAapE,KAAKwC,OAAO6B,WAC3BC,EAAYH,EACTG,EAAU5B,OAAS1C,KAAKgD,eAC7BsB,EAAYA,EAAUpC,OAAOiC,GAEzBI,IAAAA,EAAcD,EAAUE,OAAOxE,KAAKgD,eAAeK,IAAAA,SAAK/F,GACtDmH,IAAAA,EAAQnH,EAAMoH,WAAAA,GACpBD,OAAAA,EAAMvB,UAAUC,IJ3LR,kBI4LDsB,IAETH,EAAUE,MAAM,EAAGxE,KAAKgD,eAAe9F,QAAAA,SAASI,GACxCmH,IAAAA,EAAQnH,EAAMoH,WAAAA,GACpBD,EAAMvB,UAAUC,IJhMR,kBAAA,EIiMHX,OAAOjF,YAAYkH,KAE1BF,EAAYrH,QAAAA,SAASuH,GAAUzE,OAAAA,EAAKwC,OAAOmC,aAAaF,EAAOL,MAAAA,EAAAA,UAGjER,gBAAAA,WAAAA,IAAAA,EAQM5D,KAAK8B,SAAAA,EAAAA,EAAAA,sBAAAA,EAAAA,EAAAA,sBAAAA,EAAAA,EAAAA,aAAAA,EAAAA,EAAAA,UAAAA,GAAAA,EAAAA,OACG,CACL8C,KAAAA,WAAAA,EAAAA,WAA0BnI,EAAwB,OAAA,KAClDmI,WAAW1B,UAAUC,IJ/MnB,gBAAA,KIgNF0B,WAAavJ,GAAamB,EAAwB,OAAA,KAClDoI,WAAW3B,UAAUC,IJhNlB,iBIiNJ2B,IAAAA,EAAe/J,GAAgBiF,KAAK2D,iBAEpC7H,GAA0BkE,KAAK4E,WAAWG,cAExCD,EAAanC,kBAAoB,EACnCmC,EAAaH,aAAa3E,KAAK4E,WAAYE,EAAaT,YAExDS,EAAavH,YAAYyC,KAAK4E,cAK9B7I,GAA0BiE,KAAK6E,WAAWE,aAE5CD,EAAavH,YAAYyC,KAAK6E,cAAAA,EAAAA,UAKpChB,cAAAA,WAAAA,IAAAA,EAC+B7D,KAAK8B,SAAAA,EAAAA,EAAAA,WAAAA,GAAAA,EAAAA,KACxB,CACCkD,KAAAA,OAAAA,KAEFA,MAAMC,SAGPC,IAAAA,EAAY,IAAI7H,MAAM2C,KAAK4C,YAC9BuC,KAAK,MACL9B,IAAAA,SAAK+B,GACJ3I,OAAAA,EAAwB,MAAO,CAAED,UJ5OpC,YI8OIwI,KAAAA,MAAQvI,EACX,MACA,CACED,UJlPF,UIoPA0I,IAGclK,GAAcgF,KAAKP,SACzBlC,YAAYyC,KAAKgF,SAAAA,EAAAA,UAI/Bd,gBAAAA,WIpT+BmB,IAAAA,EAAUC,EACrCC,EAAAA,EAAAA,KAAAA,EJoT+CvF,KAAK8B,SAAAA,EAAAA,EAAAA,OAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,aACtDT,GAAAA,OAAOmE,iBAAiB,UItTKH,EJsTcrF,KAAKI,cItTTkF,EJsTwB,IIpT1D,WAAA,IAAA,IAAA,EAAA,GAAA,EAAA,UAAA,OAAA,KAAA,EAAA,GAAA,UAAA,GACLG,aAAaF,GACbA,EAAUG,WAAAA,WAAAA,EAAAA,CAAWL,EAAUC,GAAAA,OAAUK,OJmTrC1K,IAAAA,KACG2J,WAAWY,iBAAiB,QAASxF,KAAKW,cAAAA,KAC1CkE,WAAWW,iBAAiB,QAASxF,KAAKU,eAE7CtF,GAAAA,KACG4J,MACFvC,iBAAAA,UACAvF,QAAAA,SAAS0I,EAAGC,GACXD,OAAAA,EAAEJ,iBAAiB,QAAA,WAAexF,OAAAA,EAAKY,aAAaiF,OAGtD3K,EAAU,CACRiJ,IAAAA,EAASnE,KAAKwC,OAAOC,iBAAAA,YACnBqD,EAAAA,SAAkBC,IACLA,EAAEC,cAAcC,SAASF,EAAEG,gBAAAA,EAErC3F,mBAGLhF,GACF4I,EAAOjH,QAAAA,SAASiJ,GACdA,EAAMX,iBAAiB,aAAcxF,EAAKQ,gBAC1C2F,EAAMX,iBAAiB,WAAYM,OAAAA,EAAAA,UAM3CxF,eAAAA,WAC4BwB,KAAAA,SAAAA,WAAAA,KAEnBsE,YAAAA,EAAa,KACb7F,oBAAAA,EAAAA,UAITC,eAAAA,WACEiF,aAAazF,KAAKqG,iBAAAA,EAAAA,UAGpB9F,gBAAAA,WAAAA,IAAAA,EACsCP,KAAK8B,SAAAA,EAAAA,EAAAA,cAAAA,EAAAA,WACxB9B,KAAKoG,aAEpBX,aAAazF,KAAKqG,gBAAAA,KACbA,eAAiBX,WAAW1F,KAAKS,YAAatF,KAAAA,EAAAA,UAIvDkF,cAAAA,WACO+F,KAAAA,YAAAA,EAAa,KACb5F,kBAAAA,EAAAA,UAGPC,YAAAA,WAAAA,IAAAA,EACmCT,KAAK8B,SAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,cACjC5B,KAAAA,YAAAA,KACAmG,eAAiBX,WAAW1F,KAAKS,YAAatF,EAAgBS,IAAAA,EAAAA,UAGrEwE,cAAAA,WAAAA,IAAAA,EACyBJ,KAAK8B,SAAAA,WAAAA,GAAAA,KACvB4B,qBAEDjI,EAAY,CACR6K,IAAAA,EAAiBtG,KAAKa,kBACvBC,KAAAA,gBAAAA,KACAyF,sBAAsBD,GAGxBxC,KAAAA,eAEDrI,IAAAA,KACGoI,gBAAAA,KACA2C,UAAUxG,KAAKF,eAAAA,KAIjBmE,gBAAAA,KACA9D,qBAAAA,EAAAA,UAGPoG,sBAAAA,SAAsBD,GAAAA,IAAAA,EACCtG,KAAK8B,SAAAA,SAKV,CAAA,WAAY,gBAFpB2E,KAAAA,SAAM9I,GAAM2I,OAAAA,EAAe3E,eAAehE,OAAAA,KAK3C6E,OACFC,iBAAAA,mBACAvF,QAAAA,SAAS6I,GAAMA,OAAAA,EAAEd,WAEhB5J,GAAAA,KAEG0I,sBAAAA,EAAAA,UASX2C,YAAAA,aAAAA,EAAAA,UASA1C,sBAAAA,SAAsB2C,GAAAA,IAAAA,IAAAA,EACW3G,KAAK8B,SAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,aAC9B8E,EAAiB,GACdf,EAAIc,EAAYd,EAAIc,EAAajL,EAAcmK,IAAK,CACrDgB,IAAAA,EAAShB,EAAI7F,KAAKgD,cACxB4D,EAAeE,KAAKD,GAChBhB,EAAI,EACNe,EAAeE,KAAKD,EAAS7G,KAAKuC,aACzBsD,GAAK7F,KAAKuC,aACnBqE,EAAeE,KAAKD,EAAS7G,KAAKuC,aAAAA,GAAAA,KAIjCC,OAAOC,iBAAAA,YAAsCvF,QAAAA,SAAS6J,EAAMlB,GAC3De,EAAezH,SAAS0G,GAC1BkB,EAAK7D,UAAUC,IJrYP,mBIuYR4D,EAAK7D,UAAU+B,OJvYP,qBAAA,KI4YP+B,uBAGD5L,EAAM,CACF6L,IAAAA,EAAWjH,KAAKgF,MAAMvC,iBAAAA,UAC5BwE,EAAS/J,QAAAA,SAAS6J,GAASA,OAAAA,EAAK7D,UAAU+B,OJ3YrC,eI4YLgC,EAASjH,KAAKF,cAAcoD,UAAUC,IJ5YjC,eAAA,EAAA,UIgZT6D,qBAAAA,WAAAA,IAAAA,EAC+BhH,KAAK8B,SAAAA,EAAAA,SAAAA,EAAAA,UAAAA,KAczB8C,WAAW1B,UAAU+B,OJlajB,oBAAA,KImaJJ,WAAW3B,UAAU+B,OJnajB,sBIuZiB,IAAtBjF,KAAKF,aAAAA,KACF8E,WAAW1B,UAAUC,IJxZnB,oBAAA,KI0ZFyB,WAAW1B,UAAU+B,OJ1ZnB,oBI4ZLjF,KAAKF,eAAiBE,KAAK4C,WAAa,EAAA,KACrCiC,WAAW3B,UAAUC,IJ7ZnB,oBAAA,KI+ZF0B,WAAW3B,UAAU+B,OJ/ZnB,uBAAA,EAAA,UIwafuB,UAAAA,SAAUU,GAAAA,IAAAA,EAAAA,KAEJlH,GAAAA,KAAKmH,iBAAAA,OAAAA,KAEFA,wBAAAA,KAEAX,UAAUU,GAebP,IAAAA,EAAAA,EAZ4C3G,KAAK8B,SAAAA,EAAAA,EAAAA,aAAAA,EAAAA,EAAAA,eAAAA,EAAAA,EAAAA,MAEjDsF,GAAAA,EACFC,EAAiBH,EACfA,GAAalH,KAAK4C,YACpByE,EAAiB,EACjBD,GAAAA,GACSF,EAAY,IACrBG,EAAiBrH,KAAK4C,WAAa,EACnCwE,GAAAA,GAAc,KAEXtH,aAAeuH,EAGlBV,EADEO,GAAalH,KAAK4C,WACP5C,KAAKuC,YACT2E,EAAY,GACPxL,EAEDwL,EAAYvL,EAIzBuL,IAAclH,KAAK4C,WAAa,GAChC+D,EAAa3G,KAAKuC,YAAc7G,IAGhCiL,EAAa3G,KAAKuC,YAAc7G,GAIlCiL,EAAa9D,KAAKE,IAChBF,KAAKyE,IAAIX,GAAajL,GACtBsE,KAAKuC,aAAAA,KAIFyB,sBAAsB2C,GAAAA,KAGtBvE,WJ7cQ,eI4cSuE,EAAa3G,KAAKgD,eAEpCoE,IAAAA,KAGGD,iBAAAA,kBACInH,EAAKmH,iBACZ1B,aAAazF,EAAKuH,kBAAAA,EAEb7D,qBAAAA,EACA8C,UAAUa,GAAAA,EAEVpD,gBAAAA,EAEA9D,qBAAAA,KAGFoH,iBAAmB7B,WAAW1F,KAAKmH,iBAAkBvL,KAAAA,EAAAA,UAS9DqI,cAAAA,WAEOuD,KAAAA,aAAexH,KAAKwC,OAAOiF,cAAAA,EAAAA,UAGlCtH,kBAAAA,WACOqC,KAAAA,OAAOU,UAAU+B,OJnfV,oBAAA,EAAA,UIsfdvB,mBAAAA,WACOlB,KAAAA,OAAOU,UAAUC,IJvfV,oBAAA,EAAA,UI0fdW,aAAAA,WAEQ4D,IAAAA,EAAa,EAAI1H,KAAKgD,cAEtB2E,EADc3H,KAAK2D,gBAAgBiE,YAFhB5H,KAAK8B,SAAAA,aAIzBM,KAAAA,WJzfK,gBIyf2BuF,EAAa,MAAA,KAC7CnF,OAAOH,MAAMwF,OAAYH,EAAa1H,KAAKuC,aAAeoF,EAC7D,IAAA,MAAA,EAAA,UAGJzH,UAAAA,YACuBF,KAAK8B,SAAAA,UACV9B,KAAKF,aAAeE,KAAK4C,WAAa,IAAA,KAC/C4D,UAAUxG,KAAKF,aAAe,IAAA,EAAA,UAIvCC,UAAAA,YACuBC,KAAK8B,SAAAA,UACV9B,KAAKF,aAAe,IAAA,KAC7B0G,UAAUxG,KAAKF,aAAe,IAAA,EAAA,UAQvCY,aAAAA,WACOL,KAAAA,gBAAAA,KACAH,aAAAA,EAAAA,UAOPS,aAAAA,WACON,KAAAA,gBAAAA,KACAN,aAAAA,EAAAA,UAQPa,aAAAA,SAAakH,GACNzH,KAAAA,gBAAAA,KACAmG,UAAUsB,IAAAA,OAAAA,QAAAA;;AK9enB,aAxHA,IAAA,EAAA,EAAA,QAAA,oBAwHA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,MAAA,EAAA,MAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,GAAA,EAAA,QAAA,IAAA,GAAA,OAAA,UAAA,qBAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,MAAA,EAAA,MAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,KAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,GAAA,EAAA,QAAA,IAAA,IAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAtHA,SAASC,EAA4D,GAA9CC,IAAAA,EAAAA,EAAAA,MAAAA,OAAQ,IAAA,EAAA,EAAsC,EAAnC/I,EAAAA,EAAAA,KAAAA,OAAO,IAAA,EAAA,GAA4B,EAAxBzC,EAAAA,EAAAA,UAAcyL,EAAU,EAAA,EAAA,CAAA,QAAA,OAAA,cAC/DC,EAAUpL,SAASC,cAAc,WACjCP,GACF0L,EAAQhF,UAAUC,IAAI3G,GAEpB2L,IAAAA,EAAerL,SAASC,cAAc,MAC1CoL,EAAaC,UAAYnJ,EACzBiJ,EAAQ3K,YAAY4K,GAChBE,IAAAA,EAAavL,SAASC,cAAc,OACxCsL,EAAWD,UAAYE,KAAKC,UAC1BN,EACA,SAAC9F,EAAKpE,GACAA,OAAAA,aAAiBiB,YACZjB,EAAM5B,YAAY8C,KAEpBlB,GAET,GAEFmK,EAAQ3K,YAAY8K,GAChBhK,IAAAA,EAASvB,SAASC,cAAc,OACpCmL,EAAQ3K,YAAYc,GAChBhB,IAAAA,MAAM2K,GAAO7C,KAAK,MAAMjI,QAAQ,SAACkI,EAAIS,GACnCM,IAAAA,EAAQrJ,SAASC,cAAc,OAC/ByL,EAAQ1L,SAASC,cAAc,MACnCyL,EAAMJ,WAAavC,EAAI,GAAG4C,WACpBC,IAAAA,EAAQ7F,KAAK8F,MAAO9C,EAAImC,EAAS,KACvCQ,EAAMnG,MAAMuG,gBAAyBF,OAAAA,OAAAA,EAArC,eACAvC,EAAM5I,YAAYiL,GAClBnK,EAAOwK,OAAO1C,KAEhBrJ,SAAS8C,eAAe,UAAUrC,YAAY2K,GAC1CY,IAAAA,EAAJ,QAAYzK,EAAQ4J,GAGtB,IAAMc,EAAU,CACd,CACE9J,KAAM,cACN+I,MAAO,EACP3M,UAAU,GAEZ,CACE4D,KAAM,0BACN+I,MAAO,EACP3M,UAAU,GAEZ,CACE4D,KAAM,mBACN+I,MAAO,EACPpM,MAAO,IACPY,UAAW,QAEb,CACEyC,KAAM,kBACN+I,MAAO,EACPnM,WAAY,QAEd,CACEoD,KAAM,gCACN+I,MAAO,EACP9M,UAAU,EACVC,cAAe,IACfI,cAAc,EACdF,UAAU,GAEZ,CACE4D,KAAM,iBACN+I,MAAO,EACP/M,QAAQ,EACRC,UAAU,GAEZ,CACE+D,KAAM,gBACN+I,MAAO,EACPtM,aAAc,GAEhB,CACEuD,KAAM,kBACN+I,MAAO,EACPtM,aAAc,EACdC,eAAgB,GAElB,CACEsD,KAAM,kBACN+I,MAAO,GACPtM,aAAc,EACdC,eAAgB,GAElB,CACEsD,KAAM,YACN+I,MAAO,EACP5M,MAAM,GAER,CACE6D,KAAM,aACN+I,MAAO,GACPtM,aAAc,EACdC,eAAgB,EAChBF,WAAY,CACV,CACE+D,WAAY,IACZ+B,SAAU,CACR7F,aAAc,EACdC,eAAgB,IAGpB,CACE6D,WAAY,IACZ+B,SAAU,CACRlG,UAAU,EACVK,aAAc,EACdC,eAAgB,OAO1B0F,OAAOmE,iBAAiB,OAAQ,WAC9BuD,EAAQ1F,IAAI0E,GACRG,IAAAA,EAAUpL,SAAS8C,eAAe,eAClCkJ,IAAAA,EAAJ,QAAYZ,EAAQc,cAAc,WAAY,CAC5CtN,aAAc,KAIhBwM,EAAUpL,SAAS8C,eAAe,kBAC1BoJ,cAAc,OAAOZ,UAA7B,+DAIIU,IAAAA,EAAJ,QAAYZ,EAAQc,cAAc,WAAY,CAC5ChO,WAAYkN,EAAQc,cAAc,aAClCjO,aAAcmN,EAAQc,cAAc,gBAGtCd,EAAUpL,SAAS8C,eAAe,iBAC1BoJ,cAAc,OAAOZ,UAA7B,2DAIIU,IAAAA,EAAJ,QAAYZ,EAAQc,cAAc,WAAY,CAC5CxN,UAAW0M,EAAQc,cAAc,YACjC1N,UAAW4M,EAAQc,cAAc","file":"examples.6bdaf75e.js","sourceRoot":"../examples","sourcesContent":["export const TRANSITION = {\n  SLIDE: 'slide',\n  FADE: 'fade',\n};\n\nexport const DEFAULT_OPTIONS = {\n  // Change where arrows are attached (default is the target)\n  appendArrows: null,\n  // Change where the navigation dots are attached\n  appendDots: null,\n  // enable or disable arrows\n  arrows: true,\n  // Auto play the carousel\n  autoplay: false,\n  // Change the interval at which autoplay change slide\n  autoplaySpeed: 3000,\n  // Display or Hide dots\n  dots: true,\n  // Enable or disable infinite behavior\n  infinite: true,\n  // Customize the \"next\" arrow\n  nextArrow: null,\n  // pause autoplay when a slide is hovered,\n  pauseOnHover: true,\n  // Customize the \"previous\" arrow\n  prevArrow: null,\n  // breakpoints config\n  responsive: null,\n  // Number of slide to show at once\n  slidesToShow: 1,\n  // Number of slide to scroll when clicking on arrow\n  slidesToScroll: 1,\n  // transition speed when changing slide\n  speed: 300,\n  // Change transition type when changing slide\n  // NOTE: transition 'fade' disable options slidesToShow and slidesToScroll\n  transition: TRANSITION.SLIDE,\n  // INTERNAL: move arrows elements on init\n  _forceAppendPrevArrow: false,\n  _forceAppendNextArrow: false,\n\n  // Enable dragging the slider track with touch or mouse\n  draggable: true, // TODO\n  rtl: false, // TODO\n};\n\nexport const CLASSES = {\n  root: 'krousel',\n  trackContainer: 'k-track-container',\n  track: 'k-track',\n  slide: 'k-slide',\n  slideClone: 'k-slide-cloned',\n  slideVisible: 'k-slide-visible',\n  arrowLeft: 'k-arrow-left',\n  arrowRight: 'k-arrow-right',\n  arrowDisabled: 'k-arrow-disabled',\n  dots: 'k-dots',\n  dot: 'k-dot',\n  current: 'k-current',\n  noTransition: 'k-no-transition',\n  transitionSlide: 'k-tr-slide',\n  transitionFade: 'k-tr-fade',\n};\n\nexport const CSS_VARS = {\n  slideWidth: '--slide-width',\n  slideDOMIndex: '--slide-didx',\n};\n","export default class KrouselError extends Error {\n  constructor(code) {\n    super();\n    this.errorCode = code;\n  }\n}\n\n// BAD ARGUMENTS\nexport const INVALID_TARGET = 1;\nexport const TARGET_NOT_FOUND = 2;\n","const ATTR_MAP = {\n  className: 'class',\n};\n\nconst htmlUtils = {\n  append(target, elements) {\n    let toAppend = elements;\n    if (elements instanceof HTMLCollection) {\n      toAppend = Array.from(elements);\n    }\n    if (toAppend instanceof Array) {\n      toAppend.forEach((child) => target.appendChild(child));\n    } else {\n      target.appendChild(toAppend);\n    }\n  },\n  createElement(tag, attrs = {}, children = null) {\n    let element = document.createElement(tag);\n    Object.entries(attrs).forEach(([attr, value]) => {\n      const finalAttr = ATTR_MAP[attr] || attr;\n      element.setAttribute(finalAttr, value);\n    });\n    if (children) {\n      if (children instanceof Array) {\n        children.forEach((child) => element.appendChild(child));\n      } else {\n        element.appendChild(children);\n      }\n    }\n    return element;\n  },\n  makeStyle(props) {\n    return Object.entries(props)\n      .map(([k, v]) => {\n        const key = k.replace(/[A-Z]/g, (s) => '-' + s.toLowerCase());\n        return `${key}:${v}`;\n      })\n      .join(';');\n  },\n};\n\nexport default htmlUtils;\n","export default function classNames(...classes) {\n  return classes.filter((x) => !!x).join(' ');\n}\n","import { DEFAULT_OPTIONS, CSS_VARS, CLASSES, TRANSITION } from '../constants';\nimport KrouselError, { INVALID_TARGET } from '../errors';\nimport {\n  htmlUtils,\n  validators,\n  debounce,\n  pick,\n  objectDiff,\n  classNames,\n} from '../utils';\n\nimport './Slider.scss';\n\nconst TRANSITION_CLASS = {\n  [TRANSITION.SLIDE]: CLASSES.transitionSlide,\n  [TRANSITION.FADE]: CLASSES.transitionFade,\n};\n\nconst { isInstance, isInteger, isBoolean } = validators;\n\nfunction getTarget(targetArg) {\n  let result = targetArg;\n  if (typeof targetArg === 'string') {\n    result = document.getElementById(targetArg);\n  } else if (isInstance(targetArg, HTMLElement)) {\n    result = targetArg;\n  } else {\n    throw new KrouselError(INVALID_TARGET);\n  }\n  return result;\n}\n\nconst VALID_TRANSITIONS = Object.values(TRANSITION);\nfunction mergeOptions(options) {\n  let cleanOpts = Object.assign({}, options);\n  // generic warn function\n  const sendWarn = (optName, expected, actual) =>\n    console.warn(\n      `Krousel - Invalid option '${optName}' will be ignored. Expected ${expected}, got: ${actual}`,\n    );\n  // validate options\n  const { appendDots, transition } = options;\n  if (appendDots && !isInstance(appendDots, HTMLElement)) {\n    // erase option\n    let actual =\n      (appendDots.constructor && appendDots.constructor.name) ||\n      (appendDots.prototype && appendDots.prototype.name) ||\n      appendDots;\n    sendWarn('appendDots', 'HTMLElement', actual);\n    delete cleanOpts.appendDots;\n  }\n\n  if (transition && !VALID_TRANSITIONS.includes(transition)) {\n    sendWarn('transition', `oneOf ${VALID_TRANSITIONS.join('|')}`, transition);\n    delete cleanOpts.transition;\n  }\n\n  // merge with defaults\n  let resultConf = Object.assign({}, DEFAULT_OPTIONS, cleanOpts);\n\n  if (resultConf.responsive) {\n    // sort responsive configs by breakpoints size ASC\n    resultConf.responsive.sort((a, b) => a.breakpoint - b.breakpoint);\n  }\n\n  return resultConf;\n}\n\n/**\n * Valid properties in responsive[*].settings\n * @type {string[]}\n */\nconst VALID_BP_PROPS = ['slidesToShow', 'slidesToScroll', 'infinite'];\n\n/**\n * Compute which breakpoint config to use based on screen size\n * @param options\n * @return {null}\n */\nfunction getBreakpointConfig(options) {\n  const { responsive } = options;\n  let bpConfig = null;\n  if (responsive) {\n    // find the relevant config\n    for (let conf of responsive) {\n      if (window.innerWidth <= conf.breakpoint) {\n        // responsive is sorted by breakpoint size ASC\n        // first match is the relevant one\n        // we can stop here\n        bpConfig = conf;\n        break;\n      }\n    }\n    if (bpConfig) {\n      // keep only valid options\n      bpConfig.settings = pick(bpConfig.settings, VALID_BP_PROPS);\n    }\n  }\n  return bpConfig;\n}\n\nexport default class Slider {\n  constructor(target, options) {\n    this._setupOptions = mergeOptions(options);\n    this._target = getTarget(target);\n\n    // init props\n    this._initialized = false;\n    this._currentPage = 0;\n\n    this._showPrev = this._showPrev.bind(this);\n    this._showNext = this._showNext.bind(this);\n    this._enableTransition = this._enableTransition.bind(this);\n    this._handleResize = this._handleResize.bind(this);\n    this._stopAutoplay = this._stopAutoplay.bind(this);\n    this._startAutoplay = this._startAutoplay.bind(this);\n    this._resumeAutoplay = this._resumeAutoplay.bind(this);\n    this._pauseAutoplay = this._pauseAutoplay.bind(this);\n    this._doAutoplay = this._doAutoplay.bind(this);\n    this._requestNext = this._requestNext.bind(this);\n    this._requestPrev = this._requestPrev.bind(this);\n    this._requestGoTo = this._requestGoTo.bind(this);\n\n    this._computeOptions();\n    this._computeProps();\n    this._setupDOM();\n    this._initialized = true;\n    this._startAutoplay();\n  }\n\n  _computeOptions() {\n    let result = {};\n    const bpConfig = getBreakpointConfig(this._setupOptions);\n    if (bpConfig !== this._breakpoint) {\n      const newOptions = Object.assign(\n        {},\n        this._setupOptions,\n        bpConfig && bpConfig.settings,\n      );\n\n      if (this._options) {\n        result = objectDiff(this._options, newOptions);\n      }\n\n      this._breakpoint = bpConfig;\n      this._options = newOptions;\n    }\n    return result;\n  }\n\n  _setCssVar(name, value) {\n    this._target.style.setProperty(name, value);\n  }\n\n  _computeProps() {\n    const { infinite, slidesToShow, slidesToScroll } = this._options;\n    if (!this._initialized) {\n      this._slideCount = this._target.childElementCount;\n    } else {\n      const selector = `.${CLASSES.slide}:not(.${CLASSES.slideClone})`;\n      this._slideCount = this._track.querySelectorAll(selector).length;\n    }\n    this._pageCount = Math.ceil(\n      (this._slideCount + slidesToScroll - slidesToShow) / slidesToScroll,\n    );\n    // bound current page to page count\n    this._currentPage = Math.min(this._currentPage, this._pageCount - 1);\n    this._clonePerSide = infinite ? 2 * slidesToShow : 0;\n  }\n\n  /**\n   * Setup DOM\n   * @private\n   */\n  _setupDOM() {\n    const { transition, speed, infinite } = this._options;\n\n    const children = Array.from(this._target.children);\n\n    this._target.classList.add(CLASSES.root);\n\n    this._track = htmlUtils.createElement('div', {\n      className: classNames(CLASSES.track, TRANSITION_CLASS[transition]),\n      style: htmlUtils.makeStyle({\n        transitionDuration: `${speed}ms`,\n      }),\n    });\n    this._disableTransition();\n\n    this._trackContainer = htmlUtils.createElement(\n      'div',\n      {\n        className: CLASSES.trackContainer,\n      },\n      this._track,\n    );\n\n    this._target.appendChild(this._trackContainer);\n\n    this._setupArrowsDOM();\n    this._setupDotsDOM();\n\n    this._setCssVar(CSS_VARS.slideDOMIndex, this._clonePerSide);\n\n    this._computeSize();\n\n    children.forEach((child) => {\n      if (child instanceof HTMLElement) {\n        child.classList.add(CLASSES.slide);\n        this._track.appendChild(child);\n      }\n    });\n\n    if (infinite) {\n      this._setupInfiniteDOM();\n    }\n\n    this._computeSlidesClasses(0);\n\n    // force reflow before activating transitions\n    this.__forceReflow();\n    this._enableTransition();\n\n    // setup listeners\n    this._setupListeners();\n  }\n\n  _setupInfiniteDOM() {\n    const slides = Array.from(\n      this._track.querySelectorAll(`.${CLASSES.slide}`),\n    );\n    const firstSlide = this._track.firstChild;\n    let cloneList = slides;\n    while (cloneList.length < this._clonePerSide) {\n      cloneList = cloneList.concat(slides);\n    }\n    const clonesStart = cloneList.slice(-this._clonePerSide).map((child) => {\n      const clone = child.cloneNode(true);\n      clone.classList.add(CLASSES.slideClone);\n      return clone;\n    });\n    cloneList.slice(0, this._clonePerSide).forEach((child) => {\n      const clone = child.cloneNode(true);\n      clone.classList.add(CLASSES.slideClone);\n      this._track.appendChild(clone);\n    });\n    clonesStart.forEach((clone) => this._track.insertBefore(clone, firstSlide));\n  }\n\n  _setupArrowsDOM() {\n    const {\n      _forceAppendPrevArrow,\n      _forceAppendNextArrow,\n      appendArrows,\n      arrows,\n      nextArrow,\n      prevArrow,\n    } = this._options;\n    if (arrows) {\n      this._prevArrow = prevArrow || htmlUtils.createElement('div');\n      this._prevArrow.classList.add(CLASSES.arrowLeft);\n      this._nextArrow = nextArrow || htmlUtils.createElement('div');\n      this._nextArrow.classList.add(CLASSES.arrowRight);\n      let insertTarget = appendArrows || this._trackContainer;\n      // append prevArrow if appendArrow is specified or if it was not already connected to DOM\n      if (_forceAppendPrevArrow || !this._prevArrow.isConnected) {\n        // append at first position\n        if (insertTarget.childElementCount > 0) {\n          insertTarget.insertBefore(this._prevArrow, insertTarget.firstChild);\n        } else {\n          insertTarget.appendChild(this._prevArrow);\n        }\n      }\n\n      // append nextArrow if appendArrow is specified or if it was not already connected to DOM\n      if (_forceAppendNextArrow || !this._nextArrow.isConnected) {\n        // append at last position\n        insertTarget.appendChild(this._nextArrow);\n      }\n    }\n  }\n\n  _setupDotsDOM() {\n    const { appendDots, dots } = this._options;\n    if (dots) {\n      if (this._dots) {\n        // remove existing DOM\n        this._dots.remove();\n      }\n      // create each dot\n      const dotsItems = new Array(this._pageCount)\n        .fill(null)\n        .map((__) =>\n          htmlUtils.createElement('div', { className: CLASSES.dot }),\n        );\n      this._dots = htmlUtils.createElement(\n        'div',\n        {\n          className: CLASSES.dots,\n        },\n        dotsItems,\n      );\n\n      let container = appendDots || this._target;\n      container.appendChild(this._dots);\n    }\n  }\n\n  _setupListeners() {\n    const { arrows, dots, autoplay, pauseOnHover } = this._options;\n    window.addEventListener('resize', debounce(this._handleResize, 100));\n    if (arrows) {\n      this._prevArrow.addEventListener('click', this._requestPrev);\n      this._nextArrow.addEventListener('click', this._requestNext);\n    }\n    if (dots) {\n      this._dots\n        .querySelectorAll(`.${CLASSES.dot}`)\n        .forEach((d, i) =>\n          d.addEventListener('click', () => this._requestGoTo(i)),\n        );\n    }\n    if (autoplay) {\n      let slides = this._track.querySelectorAll(`.${CLASSES.slide}`);\n      const handleMouseOut = (e) => {\n        const doStart = !e.currentTarget.contains(e.relatedTarget);\n        if (doStart) {\n          this._resumeAutoplay();\n        }\n      };\n      if (pauseOnHover) {\n        slides.forEach((slide) => {\n          slide.addEventListener('mouseenter', this._pauseAutoplay);\n          slide.addEventListener('mouseout', handleMouseOut);\n        });\n      }\n    }\n  }\n\n  _startAutoplay() {\n    const { autoplay } = this._options;\n    if (autoplay) {\n      this._apStopped = false;\n      this._resumeAutoplay();\n    }\n  }\n\n  _pauseAutoplay() {\n    clearTimeout(this._autoplayTimer);\n  }\n\n  _resumeAutoplay() {\n    const { autoplay, autoplaySpeed } = this._options;\n    if (autoplay && !this._apStopped) {\n      // make sure we were stopped\n      clearTimeout(this._autoplayTimer);\n      this._autoplayTimer = setTimeout(this._doAutoplay, autoplaySpeed);\n    }\n  }\n\n  _stopAutoplay() {\n    this._apStopped = true;\n    this._pauseAutoplay();\n  }\n\n  _doAutoplay() {\n    const { speed, autoplaySpeed } = this._options;\n    this._showNext();\n    this._autoplayTimer = setTimeout(this._doAutoplay, autoplaySpeed + speed);\n  }\n\n  _handleResize() {\n    const { responsive } = this._options;\n    this._disableTransition();\n\n    if (responsive) {\n      const optionsChanged = this._computeOptions();\n      this._computeProps();\n      this._processOptionsChange(optionsChanged);\n    }\n\n    this._computeSize();\n\n    if (responsive) {\n      this._setupDotsDOM();\n      this._goToPage(this._currentPage);\n    }\n\n    // force reflow before re-activating transitions\n    this.__forceReflow();\n    this._enableTransition();\n  }\n\n  _processOptionsChange(optionsChanged) {\n    const { infinite } = this._options;\n\n    const anyChanged = (props) =>\n      props.some((x) => optionsChanged.hasOwnProperty(x));\n\n    if (anyChanged(['infinite', 'slidesToShow'])) {\n      // recompute infinite\n      // destroy clones anyway\n      this._track\n        .querySelectorAll(`.${CLASSES.slideClone}`)\n        .forEach((e) => e.remove());\n\n      if (infinite) {\n        // setup infinite\n        this._setupInfiniteDOM();\n      }\n    }\n  }\n\n  /**\n   * Revert changes made to the DOM upon destroy\n   * @private\n   */\n  _cleanUpDOM() {\n    // TODO\n  }\n\n  /**\n   * Update all classes for a given slide display\n   * @param slideIndex\n   * @private\n   */\n  _computeSlidesClasses(slideIndex) {\n    const { dots, slidesToShow } = this._options;\n    const highlightIndex = [];\n    for (let i = slideIndex; i < slideIndex + slidesToShow; i++) {\n      const domIdx = i + this._clonePerSide;\n      highlightIndex.push(domIdx);\n      if (i < 0) {\n        highlightIndex.push(domIdx + this._slideCount);\n      } else if (i >= this._slideCount) {\n        highlightIndex.push(domIdx - this._slideCount);\n      }\n    }\n\n    this._track.querySelectorAll(`.${CLASSES.slide}`).forEach((item, i) => {\n      if (highlightIndex.includes(i)) {\n        item.classList.add(CLASSES.slideVisible);\n      } else {\n        item.classList.remove(CLASSES.slideVisible);\n      }\n    });\n\n    // ARROWS\n    this._computeArrowClasses();\n\n    // DOTS\n    if (dots) {\n      const dotItems = this._dots.querySelectorAll(`.${CLASSES.dot}`);\n      dotItems.forEach((item) => item.classList.remove(CLASSES.current));\n      dotItems[this._currentPage].classList.add(CLASSES.current);\n    }\n  }\n\n  _computeArrowClasses() {\n    const { arrows, infinite } = this._options;\n    if (arrows) {\n      if (!infinite) {\n        if (this._currentPage === 0) {\n          this._prevArrow.classList.add(CLASSES.arrowDisabled);\n        } else {\n          this._prevArrow.classList.remove(CLASSES.arrowDisabled);\n        }\n        if (this._currentPage === this._pageCount - 1) {\n          this._nextArrow.classList.add(CLASSES.arrowDisabled);\n        } else {\n          this._nextArrow.classList.remove(CLASSES.arrowDisabled);\n        }\n      } else {\n        this._prevArrow.classList.remove(CLASSES.arrowDisabled);\n        this._nextArrow.classList.remove(CLASSES.arrowDisabled);\n      }\n    }\n  }\n\n  _goToPage(pageIndex) {\n    // if a goto postprocess were deferred\n    if (this.__goToPage_defer) {\n      // execute immediately the deferred callback\n      this.__goToPage_defer();\n      // re-process goto instruction before next render\n      this._goToPage(pageIndex);\n      return;\n    }\n    const { slidesToShow, slidesToScroll, speed } = this._options;\n\n    let postProcess = false,\n      finalPageIndex = pageIndex;\n    if (pageIndex >= this._pageCount) {\n      finalPageIndex = 0;\n      postProcess = true;\n    } else if (pageIndex < 0) {\n      finalPageIndex = this._pageCount - 1;\n      postProcess = true;\n    }\n    this._currentPage = finalPageIndex;\n    let slideIndex;\n    if (pageIndex >= this._pageCount) {\n      slideIndex = this._slideCount;\n    } else if (pageIndex < 0) {\n      slideIndex = -slidesToShow;\n    } else {\n      slideIndex = pageIndex * slidesToScroll;\n    }\n\n    if (\n      pageIndex === this._pageCount - 1 &&\n      slideIndex > this._slideCount - slidesToShow\n    ) {\n      // last page might be incomplete if slideCount % slidesToShow != 0\n      slideIndex = this._slideCount - slidesToShow;\n    }\n\n    // Clamp slideIndex to prevent going too far in clones\n    slideIndex = Math.min(\n      Math.max(slideIndex, -slidesToShow),\n      this._slideCount,\n    );\n\n    // UPDATE CLASSES\n    this._computeSlidesClasses(slideIndex);\n\n    const slideDOMIndex = slideIndex + this._clonePerSide;\n    this._setCssVar(CSS_VARS.slideDOMIndex, slideDOMIndex);\n    if (postProcess) {\n      // The defered callback occured when we transition to a clone slide\n      // it will translate to the original slide without transition\n      this.__goToPage_defer = () => {\n        delete this.__goToPage_defer;\n        clearTimeout(this.__goToPage_timer);\n        // teleport back to index within bounds (after sliding in clones)\n        this._disableTransition();\n        this._goToPage(finalPageIndex);\n        // Trigger a reflow, flushing the CSS changes\n        this.__forceReflow();\n        // Re-enable CSS after reflow\n        this._enableTransition();\n      };\n      // execute after the transition is complete\n      this.__goToPage_timer = setTimeout(this.__goToPage_defer, speed);\n    }\n  }\n\n  /**\n   * Force browser to trigger a reflow\n   * Useful after CSS changes and before (re)enabling transitions\n   * @private\n   */\n  __forceReflow() {\n    // value must be read to avoid browser optimizations that would skip useless reflow\n    this._reflowTrash = this._track.offsetHeight; // DO NOT REMOVE\n  }\n\n  _enableTransition() {\n    this._track.classList.remove(CLASSES.noTransition);\n  }\n\n  _disableTransition() {\n    this._track.classList.add(CLASSES.noTransition);\n  }\n\n  _computeSize() {\n    const { slidesToShow } = this._options;\n    const cloneCount = 2 * this._clonePerSide;\n    const sliderWidth = this._trackContainer.clientWidth;\n    const slideWidth = sliderWidth / slidesToShow;\n    this._setCssVar(CSS_VARS.slideWidth, slideWidth + 'px');\n    this._track.style.width = `${(cloneCount + this._slideCount) * slideWidth +\n      1000}px`;\n  }\n\n  _showNext() {\n    const { infinite } = this._options;\n    if (infinite || this._currentPage < this._pageCount - 1) {\n      this._goToPage(this._currentPage + 1);\n    }\n  }\n\n  _showPrev() {\n    const { infinite } = this._options;\n    if (infinite || this._currentPage > 0) {\n      this._goToPage(this._currentPage - 1);\n    }\n  }\n\n  /**\n   * User request to show next slide\n   * @private\n   */\n  _requestNext() {\n    this._stopAutoplay();\n    this._showNext();\n  }\n\n  /**\n   * User request to show prev slide\n   * @private\n   */\n  _requestPrev() {\n    this._stopAutoplay();\n    this._showPrev();\n  }\n\n  /**\n   * User request to show a specific slide\n   * @param index\n   * @private\n   */\n  _requestGoTo(index) {\n    this._stopAutoplay();\n    this._goToPage(index);\n  }\n}\n","export function isInstance(value, klass) {\n  return value instanceof klass;\n}\n\nexport function isInteger(value) {\n  return typeof value === 'number' && !isNaN(value) && isFinite(value);\n}\n\nexport function isBoolean(value) {\n  return typeof value === 'boolean';\n}\n","/**\n * Return an object with the properties that are different in first and second param\n * @param obj1 first object\n * @param obj2 second object\n * @return {{}}\n */\nexport default function objectDiff(obj1, obj2) {\n  let allKeys = Array.from(\n    new Set(Object.keys(obj1).concat(Object.keys(obj2))),\n  );\n  return allKeys.reduce((acc, key) => {\n    if (obj1[key] !== obj2[key]) acc[key] = obj2[key];\n    return acc;\n  }, {});\n}\n","/**\n * pick only a set of properties from an object\n * @param obj source object\n * @param props array of props to pick\n * @return new object with only the picked properties\n */\nexport default function pick(obj, props) {\n  return props.reduce((acc, k) => {\n    if (obj.hasOwnProperty(k)) {\n      acc[k] = obj[k];\n    }\n    return acc;\n  }, {});\n}\n","export default function debounce(callback, delay) {\n  let timeout;\n  return function(...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(callback, delay, ...args);\n  };\n}\n","import Krousel from '../dist/krousel';\n\nfunction makeKrousel({ count = 5, name = '', className, ...config }) {\n  let section = document.createElement('section');\n  if (className) {\n    section.classList.add(className);\n  }\n  let sectionTitle = document.createElement('h1');\n  sectionTitle.innerHTML = name;\n  section.appendChild(sectionTitle);\n  let configDesc = document.createElement('pre');\n  configDesc.innerHTML = JSON.stringify(\n    config,\n    (key, value) => {\n      if (value instanceof HTMLElement) {\n        return value.constructor.name;\n      }\n      return value;\n    },\n    2,\n  );\n  section.appendChild(configDesc);\n  let target = document.createElement('div');\n  section.appendChild(target);\n  new Array(count).fill(null).forEach((__, i) => {\n    let slide = document.createElement('div');\n    let title = document.createElement('h3');\n    title.innerHTML = (i + 1).toString();\n    const color = Math.round((i / count) * 360);\n    title.style.backgroundColor = `hsl(${color}, 60%, 60%)`;\n    slide.appendChild(title);\n    target.append(slide);\n  });\n  document.getElementById('target').appendChild(section);\n  new Krousel(target, config);\n}\n\nconst CONFIGS = [\n  {\n    name: 'Simple demo',\n    count: 5,\n    infinite: false,\n  },\n  {\n    name: 'Infinite loop (default)',\n    count: 5,\n    infinite: true,\n  },\n  {\n    name: 'Transition speed',\n    count: 5,\n    speed: 1000,\n    className: 'slow',\n  },\n  {\n    name: 'Transition Type',\n    count: 5,\n    transition: 'fade',\n  },\n  {\n    name: 'Autoplay (pause when hovered)',\n    count: 2,\n    autoplay: true,\n    autoplaySpeed: 3000,\n    pauseOnHover: true,\n    infinite: true,\n  },\n  {\n    name: 'Disable arrows',\n    count: 5,\n    arrows: false,\n    autoplay: true,\n  },\n  {\n    name: 'Show multiple',\n    count: 5,\n    slidesToShow: 2,\n  },\n  {\n    name: 'Scroll multiple',\n    count: 5,\n    slidesToShow: 2,\n    slidesToScroll: 2,\n  },\n  {\n    name: 'Scroll multiple',\n    count: 25,\n    slidesToShow: 4,\n    slidesToScroll: 3,\n  },\n  {\n    name: 'Hide dots',\n    count: 5,\n    dots: false,\n  },\n  {\n    name: 'Responsive',\n    count: 10,\n    slidesToShow: 3,\n    slidesToScroll: 3,\n    responsive: [\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 400,\n        settings: {\n          infinite: false,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  },\n];\n\nwindow.addEventListener('load', function() {\n  CONFIGS.map(makeKrousel);\n  let section = document.getElementById('hoverEffect');\n  new Krousel(section.querySelector('.slider'), {\n    slidesToShow: 3,\n  });\n\n  // do krousel with custom inserts\n  section = document.getElementById('customTargets');\n  section.querySelector('pre').innerHTML = `{\n  appendDots: HTMLElement\n  appendArrows: HTMLElement\n}`;\n  new Krousel(section.querySelector('.slider'), {\n    appendDots: section.querySelector('.top-zone'),\n    appendArrows: section.querySelector('.top-zone'),\n  });\n\n  section = document.getElementById('customArrows');\n  section.querySelector('pre').innerHTML = `{\n  prevArrow: HTMLElement\n  nextArrow: HTMLElement\n}`;\n  new Krousel(section.querySelector('.slider'), {\n    prevArrow: section.querySelector('.go-prev'),\n    nextArrow: section.querySelector('.go-next'),\n  });\n});\n"]}