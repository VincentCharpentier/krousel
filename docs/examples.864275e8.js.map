{"version":3,"sources":["../src/constants.js","../src/errors.js","../src/utils/html.js","../src/utils/classNames.js","../src/components/Slider.js","../src/utils/validators.js","../src/utils/objectDiff.js","../src/utils/pick.js","../src/utils/debounce.js","index.js"],"names":["const","TRANSITION","SLIDE","FADE","DEFAULT_OPTIONS","appendArrows","appendDots","arrows","autoplay","autoplaySpeed","dots","infinite","nextArrow","pauseOnHover","prevArrow","responsive","slidesToShow","slidesToScroll","speed","swipe","transition","_forceAppendPrevArrow","_forceAppendNextArrow","draggable","rtl","KrouselError","constructor","code","errorCode","Error","ATTR_MAP","className","htmlUtils","tag","attrs","children","element","document","createElement","Object","entries","forEach","setAttribute","attr","Array","child","appendChild","classNames","classes","filter","x","join","TRANSITION_CLASS","isInstance","value","klass","VALID_TRANSITIONS","values","VALID_BP_PROPS","getEventClientX","e","touches","type","changedTouches","clientX","Slider","target","options","_setupOptions","cleanOpts","assign","sendWarn","optName","expected","actual","console","warn","HTMLElement","name","prototype","includes","resultConf","sort","a","b","breakpoint","_target","targetArg","result","getElementById","_initialized","_currentPage","_dragInitialOffset","_showPrev","this","bind","_showNext","_enableTransition","_handleResize","_stopAutoplay","_startAutoplay","_resumeAutoplay","_pauseAutoplay","_doAutoplay","_requestNext","_requestPrev","_requestGoTo","_startDragging","_onDragMouseMove","_endDragging","_computeOptions","_computeProps","_setupDOM","obj1","obj2","bpConfig","obj","conf","window","innerWidth","settings","reduce","acc","k","hasOwnProperty","_breakpoint","newOptions","_options","from","Set","keys","concat","key","_setCssVar","style","setProperty","_slideCount","_track","querySelectorAll","length","childElementCount","_pageCount","Math","ceil","min","_hasClones","_clonePerSide","props","classList","add","transitionDuration","map","replace","s","toLowerCase","v","_disableTransition","_trackContainer","_setupArrowsDOM","_setupDotsDOM","_computeSize","_setupInfiniteDOM","_computeSlidesClasses","__forceReflow","_setupListeners","slides","firstSlide","firstChild","cloneList","clonesStart","slice","clone","cloneNode","insertBefore","_prevArrow","_nextArrow","insertTarget","isConnected","_dots","remove","dotsItems","fill","__","callback","delay","timeout","addEventListener","clearTimeout","setTimeout","args","d","i","handleMouseOut","currentTarget","contains","relatedTarget","slide","onStopDrag","removeEventListener","onStartDrag","_computeSlideIdxFromDragX","round","_slideWidth","_computeDragX","finalX","_dragStartX","max","isAnimSliding","_dragStartTime","Date","now","DOMMatrix","getComputedStyle","transform","m41","dragX","currentSlideIdx","removeProperty","slideIndex","pageIndex","dragTime","deltaX","amplitude","abs","trackWidth","sign","_goToPage","_apStopped","_autoplayTimer","optionsChanged","_processOptionsChange","some","_cleanUpDOM","highlightIndex","domIdx","push","item","_computeArrowClasses","dotItems","__goToPage_defer","postProcess","finalPageIndex","__goToPage_timer","_reflowTrash","offsetHeight","cloneCount","clientWidth","width","index","makeKrousel","count","config","section","sectionTitle","innerHTML","configDesc","JSON","stringify","title","toString","color","backgroundColor","append","Krousel","CONFIGS","slider","querySelector"],"mappings":"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","file":"examples.864275e8.js","sourceRoot":"../examples","sourcesContent":["export const TRANSITION = {\n  SLIDE: 'slide',\n  FADE: 'fade',\n};\n\nexport const DEFAULT_OPTIONS = {\n  // Change where arrows are attached (default is the target)\n  appendArrows: null,\n  // Change where the navigation dots are attached\n  appendDots: null,\n  // enable or disable arrows\n  arrows: true,\n  // Auto play the carousel\n  autoplay: false,\n  // Change the interval at which autoplay change slide\n  autoplaySpeed: 3000,\n  // Display or Hide dots\n  dots: true,\n  // Enable or disable infinite behavior\n  infinite: true,\n  // Customize the \"next\" arrow\n  nextArrow: null,\n  // pause autoplay when a slide is hovered,\n  pauseOnHover: true,\n  // Customize the \"previous\" arrow\n  prevArrow: null,\n  // breakpoints config\n  responsive: null,\n  // Number of slide to show at once\n  slidesToShow: 1,\n  // Number of slide to scroll when clicking on arrow\n  slidesToScroll: 1,\n  // transition speed when changing slide\n  speed: 300,\n  // Enable swiping with touch or mouse\n  swipe: true,\n  // Change transition type when changing slide\n  // NOTE: transition 'fade' disable options slidesToShow and slidesToScroll\n  transition: TRANSITION.SLIDE,\n  // INTERNAL: move arrows elements on init\n  _forceAppendPrevArrow: false,\n  _forceAppendNextArrow: false,\n\n  // Enable dragging the slider track with touch or mouse\n  draggable: true, // TODO\n  rtl: false, // TODO\n};\n\nexport const CLASSES = {\n  root: 'krousel',\n  trackContainer: 'k-track-container',\n  track: 'k-track',\n  slide: 'k-slide',\n  slideClone: 'k-slide-cloned',\n  slideVisible: 'k-slide-visible',\n  arrowLeft: 'k-arrow-left',\n  arrowRight: 'k-arrow-right',\n  arrowDisabled: 'k-arrow-disabled',\n  dots: 'k-dots',\n  dot: 'k-dot',\n  current: 'k-current',\n  noTransition: 'k-no-transition',\n  transitionSlide: 'k-tr-slide',\n  transitionFade: 'k-tr-fade',\n};\n\nexport const CSS_VARS = {\n  slideWidth: '--slide-width',\n  slideDOMIndex: '--slide-didx',\n};\n","export default class KrouselError extends Error {\n  constructor(code) {\n    super();\n    this.errorCode = code;\n  }\n}\n\n// BAD ARGUMENTS\nexport const INVALID_TARGET = 1;\nexport const TARGET_NOT_FOUND = 2;\n","const ATTR_MAP = {\n  className: 'class',\n};\n\nconst Case = {\n  snakeToCamel(str) {\n    return str.replace(/-[A-Z]/gi, (s) => s[1].toUpperCase());\n  },\n  camelToSnake(str) {\n    return str.replace(/[A-Z]/g, (s) => '-' + s.toLowerCase());\n  },\n};\n\nconst htmlUtils = {\n  append(target, elements) {\n    let toAppend = elements;\n    if (elements instanceof HTMLCollection) {\n      toAppend = Array.from(elements);\n    }\n    if (toAppend instanceof Array) {\n      toAppend.forEach((child) => target.appendChild(child));\n    } else {\n      target.appendChild(toAppend);\n    }\n  },\n  createElement(tag, attrs = {}, children = null) {\n    let element = document.createElement(tag);\n    Object.entries(attrs).forEach(([attr, value]) => {\n      const finalAttr = ATTR_MAP[attr] || attr;\n      element.setAttribute(finalAttr, value);\n    });\n    if (children) {\n      if (children instanceof Array) {\n        children.forEach((child) => element.appendChild(child));\n      } else {\n        element.appendChild(children);\n      }\n    }\n    return element;\n  },\n  makeStyle(props) {\n    return Object.entries(props)\n      .map(([k, v]) => `${Case.camelToSnake(k)}:${v}`)\n      .join(';');\n  },\n  parseStyle(style) {\n    return Object.fromEntries(\n      style\n        .split(';')\n        .filter((x) => x.length > 0)\n        .map((rule) => rule.split(':').map((x) => x.trim()))\n        .map(([key, v]) => [Case.snakeToCamel(key), v]),\n    );\n  },\n  setElementStyle(element, styleObj) {\n    const currentStyle = this.parseStyle(element.getAttribute('style'));\n    const mergedStyle = { ...currentStyle, ...styleObj };\n    // drop null entries\n    Object.entries(mergedStyle).forEach(([k, v]) => {\n      if (v === null) {\n        delete mergedStyle[k];\n      }\n    });\n    element.setAttribute('style', this.makeStyle(mergedStyle));\n  },\n  getElementTranslateXValue(element) {\n    return new DOMMatrix(getComputedStyle(element).transform).m41;\n  },\n};\n\nexport default htmlUtils;\n","export default function classNames(...classes) {\n  return classes.filter((x) => !!x).join(' ');\n}\n","import { DEFAULT_OPTIONS, CSS_VARS, CLASSES, TRANSITION } from '../constants';\nimport KrouselError, { INVALID_TARGET } from '../errors';\nimport {\n  htmlUtils,\n  validators,\n  debounce,\n  pick,\n  objectDiff,\n  classNames,\n} from '../utils';\n\nimport './Slider.scss';\n\nconst TRANSITION_CLASS = {\n  [TRANSITION.SLIDE]: CLASSES.transitionSlide,\n  [TRANSITION.FADE]: CLASSES.transitionFade,\n};\n\nconst { isInstance, isInteger, isBoolean } = validators;\n\nfunction getTarget(targetArg) {\n  let result = targetArg;\n  if (typeof targetArg === 'string') {\n    result = document.getElementById(targetArg);\n  } else if (isInstance(targetArg, HTMLElement)) {\n    result = targetArg;\n  } else {\n    throw new KrouselError(INVALID_TARGET);\n  }\n  return result;\n}\n\nconst VALID_TRANSITIONS = Object.values(TRANSITION);\nfunction mergeOptions(options) {\n  let cleanOpts = Object.assign({}, options);\n  // generic warn function\n  const sendWarn = (optName, expected, actual) =>\n    console.warn(\n      `Krousel - Invalid option '${optName}' will be ignored. Expected ${expected}, got: ${actual}`,\n    );\n  // validate options\n  const { appendDots, transition } = options;\n  if (appendDots && !isInstance(appendDots, HTMLElement)) {\n    // erase option\n    let actual =\n      (appendDots.constructor && appendDots.constructor.name) ||\n      (appendDots.prototype && appendDots.prototype.name) ||\n      appendDots;\n    sendWarn('appendDots', 'HTMLElement', actual);\n    delete cleanOpts.appendDots;\n  }\n\n  if (transition && !VALID_TRANSITIONS.includes(transition)) {\n    sendWarn('transition', `oneOf ${VALID_TRANSITIONS.join('|')}`, transition);\n    delete cleanOpts.transition;\n  }\n\n  // merge with defaults\n  let resultConf = Object.assign({}, DEFAULT_OPTIONS, cleanOpts);\n\n  if (resultConf.responsive) {\n    // sort responsive configs by breakpoints size ASC\n    resultConf.responsive.sort((a, b) => a.breakpoint - b.breakpoint);\n  }\n\n  return resultConf;\n}\n\n/**\n * Valid properties in responsive[*].settings\n * @type {string[]}\n */\nconst VALID_BP_PROPS = ['slidesToShow', 'slidesToScroll', 'infinite'];\n\n/**\n * Compute which breakpoint config to use based on screen size\n * @param options\n * @return {null}\n */\nfunction getBreakpointConfig(options) {\n  const { responsive } = options;\n  let bpConfig = null;\n  if (responsive) {\n    // find the relevant config\n    for (let conf of responsive) {\n      if (window.innerWidth <= conf.breakpoint) {\n        // responsive is sorted by breakpoint size ASC\n        // first match is the relevant one\n        // we can stop here\n        bpConfig = conf;\n        break;\n      }\n    }\n    if (bpConfig) {\n      // keep only valid options\n      bpConfig.settings = pick(bpConfig.settings, VALID_BP_PROPS);\n    }\n  }\n  return bpConfig;\n}\n\n/**\n * compute X position of a touch or mouse event\n * @param e native event\n * @return {number}\n */\nfunction getEventClientX(e) {\n  let result = 0;\n  if (e.touches) {\n    // touch event\n    if (e.type === 'touchend') {\n      result = e.changedTouches[0].clientX;\n    } else {\n      result = e.touches[0].clientX;\n    }\n  } else {\n    result = e.clientX;\n  }\n  return result;\n}\n\nexport default class Slider {\n  constructor(target, options) {\n    this._setupOptions = mergeOptions(options);\n    this._target = getTarget(target);\n\n    // init props\n    this._initialized = false;\n    this._currentPage = 0;\n    this._dragInitialOffset = 0;\n\n    this._showPrev = this._showPrev.bind(this);\n    this._showNext = this._showNext.bind(this);\n    this._enableTransition = this._enableTransition.bind(this);\n    this._handleResize = this._handleResize.bind(this);\n    this._stopAutoplay = this._stopAutoplay.bind(this);\n    this._startAutoplay = this._startAutoplay.bind(this);\n    this._resumeAutoplay = this._resumeAutoplay.bind(this);\n    this._pauseAutoplay = this._pauseAutoplay.bind(this);\n    this._doAutoplay = this._doAutoplay.bind(this);\n    this._requestNext = this._requestNext.bind(this);\n    this._requestPrev = this._requestPrev.bind(this);\n    this._requestGoTo = this._requestGoTo.bind(this);\n    this._startDragging = this._startDragging.bind(this);\n    this._onDragMouseMove = this._onDragMouseMove.bind(this);\n    this._endDragging = this._endDragging.bind(this);\n\n    this._computeOptions();\n    this._computeProps();\n    this._setupDOM();\n    this._initialized = true;\n    this._startAutoplay();\n  }\n\n  _computeOptions() {\n    let result = {};\n    const bpConfig = getBreakpointConfig(this._setupOptions);\n    if (bpConfig !== this._breakpoint) {\n      const newOptions = Object.assign(\n        {},\n        this._setupOptions,\n        bpConfig && bpConfig.settings,\n      );\n\n      if (this._options) {\n        result = objectDiff(this._options, newOptions);\n      }\n\n      this._breakpoint = bpConfig;\n      this._options = newOptions;\n    }\n    return result;\n  }\n\n  _setCssVar(name, value) {\n    this._target.style.setProperty(name, value);\n  }\n\n  _computeProps() {\n    const {\n      infinite,\n      slidesToShow,\n      slidesToScroll,\n      transition,\n    } = this._options;\n    if (!this._initialized) {\n      this._slideCount = this._target.childElementCount;\n    } else {\n      const selector = `.${CLASSES.slide}:not(.${CLASSES.slideClone})`;\n      this._slideCount = this._track.querySelectorAll(selector).length;\n    }\n    this._pageCount = Math.ceil(\n      (this._slideCount + slidesToScroll - slidesToShow) / slidesToScroll,\n    );\n    // bound current page to page count\n    this._currentPage = Math.min(this._currentPage, this._pageCount - 1);\n    this._hasClones = infinite && transition === TRANSITION.SLIDE;\n    this._clonePerSide = this._hasClones ? 2 * slidesToShow : 0;\n  }\n\n  /**\n   * Setup DOM\n   * @private\n   */\n  _setupDOM() {\n    const { transition, speed } = this._options;\n\n    const children = Array.from(this._target.children);\n\n    this._target.classList.add(CLASSES.root);\n\n    this._track = htmlUtils.createElement('div', {\n      className: classNames(CLASSES.track, TRANSITION_CLASS[transition]),\n      style: htmlUtils.makeStyle({\n        transitionDuration: `${speed}ms`,\n      }),\n    });\n    this._disableTransition();\n\n    this._trackContainer = htmlUtils.createElement(\n      'div',\n      {\n        className: CLASSES.trackContainer,\n      },\n      this._track,\n    );\n\n    this._target.appendChild(this._trackContainer);\n\n    this._setupArrowsDOM();\n    this._setupDotsDOM();\n\n    this._setCssVar(CSS_VARS.slideDOMIndex, this._clonePerSide);\n\n    this._computeSize();\n\n    children.forEach((child) => {\n      if (child instanceof HTMLElement) {\n        child.classList.add(CLASSES.slide);\n        this._track.appendChild(child);\n      }\n    });\n\n    if (this._hasClones) {\n      this._setupInfiniteDOM();\n    }\n\n    this._computeSlidesClasses(0);\n\n    // force reflow before activating transitions\n    this.__forceReflow();\n    this._enableTransition();\n\n    // setup listeners\n    this._setupListeners();\n  }\n\n  _setupInfiniteDOM() {\n    const slides = Array.from(\n      this._track.querySelectorAll(`.${CLASSES.slide}`),\n    );\n    const firstSlide = this._track.firstChild;\n    let cloneList = slides;\n    while (cloneList.length < this._clonePerSide) {\n      cloneList = cloneList.concat(slides);\n    }\n    const clonesStart = cloneList.slice(-this._clonePerSide).map((child) => {\n      const clone = child.cloneNode(true);\n      clone.classList.add(CLASSES.slideClone);\n      return clone;\n    });\n    cloneList.slice(0, this._clonePerSide).forEach((child) => {\n      const clone = child.cloneNode(true);\n      clone.classList.add(CLASSES.slideClone);\n      this._track.appendChild(clone);\n    });\n    clonesStart.forEach((clone) => this._track.insertBefore(clone, firstSlide));\n  }\n\n  _setupArrowsDOM() {\n    const {\n      _forceAppendPrevArrow,\n      _forceAppendNextArrow,\n      appendArrows,\n      arrows,\n      nextArrow,\n      prevArrow,\n    } = this._options;\n    if (arrows) {\n      this._prevArrow = prevArrow || htmlUtils.createElement('div');\n      this._prevArrow.classList.add(CLASSES.arrowLeft);\n      this._nextArrow = nextArrow || htmlUtils.createElement('div');\n      this._nextArrow.classList.add(CLASSES.arrowRight);\n      let insertTarget = appendArrows || this._trackContainer;\n      // append prevArrow if appendArrow is specified or if it was not already connected to DOM\n      if (_forceAppendPrevArrow || !this._prevArrow.isConnected) {\n        // append at first position\n        if (insertTarget.childElementCount > 0) {\n          insertTarget.insertBefore(this._prevArrow, insertTarget.firstChild);\n        } else {\n          insertTarget.appendChild(this._prevArrow);\n        }\n      }\n\n      // append nextArrow if appendArrow is specified or if it was not already connected to DOM\n      if (_forceAppendNextArrow || !this._nextArrow.isConnected) {\n        // append at last position\n        insertTarget.appendChild(this._nextArrow);\n      }\n    }\n  }\n\n  _setupDotsDOM() {\n    const { appendDots, dots } = this._options;\n    if (dots) {\n      if (this._dots) {\n        // remove existing DOM\n        this._dots.remove();\n      }\n      // create each dot\n      const dotsItems = new Array(this._pageCount)\n        .fill(null)\n        .map((__) =>\n          htmlUtils.createElement('div', { className: CLASSES.dot }),\n        );\n      this._dots = htmlUtils.createElement(\n        'div',\n        {\n          className: CLASSES.dots,\n        },\n        dotsItems,\n      );\n\n      let container = appendDots || this._target;\n      container.appendChild(this._dots);\n    }\n  }\n\n  _setupListeners() {\n    const { arrows, dots, autoplay, pauseOnHover, swipe } = this._options;\n    window.addEventListener('resize', debounce(this._handleResize, 100));\n    if (arrows) {\n      this._prevArrow.addEventListener('click', this._requestPrev);\n      this._nextArrow.addEventListener('click', this._requestNext);\n    }\n    if (dots) {\n      this._dots\n        .querySelectorAll(`.${CLASSES.dot}`)\n        .forEach((d, i) =>\n          d.addEventListener('click', () => this._requestGoTo(i)),\n        );\n    }\n    if (autoplay) {\n      let slides = this._track.querySelectorAll(`.${CLASSES.slide}`);\n      const handleMouseOut = (e) => {\n        const doStart = !e.currentTarget.contains(e.relatedTarget);\n        if (doStart) {\n          this._resumeAutoplay();\n        }\n      };\n      if (pauseOnHover) {\n        slides.forEach((slide) => {\n          slide.addEventListener('mouseenter', this._pauseAutoplay);\n          slide.addEventListener('mouseout', handleMouseOut);\n        });\n      }\n    }\n    if (swipe) {\n      const onStopDrag = (e) => {\n        window.removeEventListener('mousemove', this._onDragMouseMove);\n        window.removeEventListener('touchmove', this._onDragMouseMove);\n        window.removeEventListener('mouseup', onStopDrag);\n        window.removeEventListener('touchend', onStopDrag);\n        this._endDragging(e);\n      };\n      const onStartDrag = (e) => {\n        window.addEventListener('mouseup', onStopDrag);\n        window.addEventListener('touchend', onStopDrag);\n        window.addEventListener('mousemove', this._onDragMouseMove);\n        window.addEventListener('touchmove', this._onDragMouseMove);\n        this._startDragging(e);\n      };\n      this._track.addEventListener('mousedown', onStartDrag);\n      this._track.addEventListener('touchstart', onStartDrag);\n    }\n  }\n\n  _computeSlideIdxFromDragX(x) {\n    const { transition, slidesToShow } = this._options;\n    let result = Math.round(-x / this._slideWidth - this._clonePerSide);\n    if (transition !== TRANSITION.SLIDE) {\n      // fade transition: result is how many slides were swiped\n      // add current slide index\n      result += this._currentPage * slidesToShow;\n    }\n    return result;\n  }\n\n  _computeDragX(e) {\n    const { infinite } = this._options;\n    const clientX = getEventClientX(e);\n    const dX = clientX - this._dragStartX;\n    let finalX = this._dragInitialOffset + dX;\n    if (!infinite) {\n      // limit drag effect in finite slider\n      const minBound = -this._slideWidth * (this._slideCount - 1);\n      finalX = Math.min(Math.max(finalX, minBound), 0);\n    }\n    return finalX;\n  }\n\n  _startDragging(e) {\n    const { transition } = this._options;\n    const isAnimSliding = transition === TRANSITION.SLIDE;\n    this._dragStartX = getEventClientX(e);\n    this._dragStartTime = Date.now();\n    this._dragInitialOffset = isAnimSliding\n      ? htmlUtils.getElementTranslateXValue(this._track)\n      : 0;\n    this._pauseAutoplay();\n    if (isAnimSliding) {\n      this._disableTransition();\n    }\n  }\n\n  _onDragMouseMove(e) {\n    const { transition } = this._options;\n    const dragX = this._computeDragX(e);\n    if (transition === TRANSITION.SLIDE) {\n      // make track follow input\n      this._track.style.setProperty('--dX', dragX + 'px');\n    }\n    // update slide display according to drag position\n    const currentSlideIdx = this._computeSlideIdxFromDragX(dragX);\n    this._computeSlidesClasses(currentSlideIdx);\n  }\n\n  _endDragging(e) {\n    const { slidesToScroll, slidesToShow } = this._options;\n    const dragX = this._computeDragX(e);\n\n    // re-enable transition\n    this._enableTransition();\n\n    // remove css var overwrite\n    this._track.style.removeProperty('--dX');\n\n    // snap to closest page\n    const slideIndex = this._computeSlideIdxFromDragX(dragX);\n    let pageIndex = Math.round(slideIndex / slidesToScroll);\n\n    if (pageIndex === this._currentPage) {\n      // check if gesture was a quick slide\n      const dragTime = Date.now() - this._dragStartTime;\n      const clientX = getEventClientX(e);\n      const deltaX = clientX - this._dragStartX;\n      const amplitude = Math.abs(deltaX);\n      const trackWidth = slidesToShow * this._slideWidth;\n      // quick drag with reasonable amplitude is considered swipe next/prev\n      if (\n        dragTime < 500 &&\n        amplitude > trackWidth * 0.3 &&\n        amplitude < trackWidth\n      ) {\n        pageIndex = this._currentPage - Math.sign(deltaX);\n      }\n    }\n    this._goToPage(pageIndex);\n    this._resumeAutoplay();\n  }\n\n  _startAutoplay() {\n    const { autoplay } = this._options;\n    if (autoplay) {\n      this._apStopped = false;\n      this._resumeAutoplay();\n    }\n  }\n\n  _pauseAutoplay() {\n    clearTimeout(this._autoplayTimer);\n  }\n\n  _resumeAutoplay() {\n    const { autoplay, autoplaySpeed } = this._options;\n    if (autoplay && !this._apStopped) {\n      // make sure we were stopped\n      clearTimeout(this._autoplayTimer);\n      this._autoplayTimer = setTimeout(this._doAutoplay, autoplaySpeed);\n    }\n  }\n\n  _stopAutoplay() {\n    this._apStopped = true;\n    this._pauseAutoplay();\n  }\n\n  _doAutoplay() {\n    const { speed, autoplaySpeed } = this._options;\n    this._showNext();\n    this._autoplayTimer = setTimeout(this._doAutoplay, autoplaySpeed + speed);\n  }\n\n  _handleResize() {\n    const { responsive } = this._options;\n    this._disableTransition();\n\n    if (responsive) {\n      const optionsChanged = this._computeOptions();\n      this._computeProps();\n      this._processOptionsChange(optionsChanged);\n    }\n\n    this._computeSize();\n\n    if (responsive) {\n      this._setupDotsDOM();\n      this._goToPage(this._currentPage);\n    }\n\n    // force reflow before re-activating transitions\n    this.__forceReflow();\n    this._enableTransition();\n  }\n\n  _processOptionsChange(optionsChanged) {\n    const anyChanged = (props) =>\n      props.some((x) => optionsChanged.hasOwnProperty(x));\n\n    if (anyChanged(['infinite', 'slidesToShow'])) {\n      // recompute infinite\n      // destroy clones anyway\n      this._track\n        .querySelectorAll(`.${CLASSES.slideClone}`)\n        .forEach((e) => e.remove());\n\n      if (this._hasClones) {\n        this._setupInfiniteDOM();\n      }\n    }\n  }\n\n  /**\n   * Revert changes made to the DOM upon destroy\n   * @private\n   */\n  _cleanUpDOM() {\n    // TODO\n  }\n\n  /**\n   * Update all classes for a given slide display\n   * @param slideIndex\n   * @private\n   */\n  _computeSlidesClasses(slideIndex) {\n    const { dots, slidesToShow } = this._options;\n    const highlightIndex = [];\n    for (let i = slideIndex; i < slideIndex + slidesToShow; i++) {\n      const domIdx = i + this._clonePerSide;\n      highlightIndex.push(domIdx);\n      if (i < 0) {\n        highlightIndex.push(domIdx + this._slideCount);\n      } else if (i >= this._slideCount) {\n        highlightIndex.push(domIdx - this._slideCount);\n      }\n    }\n\n    this._track.querySelectorAll(`.${CLASSES.slide}`).forEach((item, i) => {\n      if (highlightIndex.includes(i)) {\n        item.classList.add(CLASSES.slideVisible);\n      } else {\n        item.classList.remove(CLASSES.slideVisible);\n      }\n    });\n\n    // ARROWS\n    this._computeArrowClasses();\n\n    // DOTS\n    if (dots) {\n      const dotItems = this._dots.querySelectorAll(`.${CLASSES.dot}`);\n      dotItems.forEach((item) => item.classList.remove(CLASSES.current));\n      if (dotItems.length > 0) {\n        dotItems[this._currentPage].classList.add(CLASSES.current);\n      }\n    }\n  }\n\n  _computeArrowClasses() {\n    const { arrows, infinite } = this._options;\n    if (arrows) {\n      if (!infinite) {\n        if (this._currentPage === 0) {\n          this._prevArrow.classList.add(CLASSES.arrowDisabled);\n        } else {\n          this._prevArrow.classList.remove(CLASSES.arrowDisabled);\n        }\n        if (this._currentPage === this._pageCount - 1) {\n          this._nextArrow.classList.add(CLASSES.arrowDisabled);\n        } else {\n          this._nextArrow.classList.remove(CLASSES.arrowDisabled);\n        }\n      } else {\n        this._prevArrow.classList.remove(CLASSES.arrowDisabled);\n        this._nextArrow.classList.remove(CLASSES.arrowDisabled);\n      }\n    }\n  }\n\n  _goToPage(pageIndex) {\n    // if a goto postprocess were deferred\n    if (this.__goToPage_defer) {\n      // execute immediately the deferred callback\n      this.__goToPage_defer();\n      // re-process goto instruction before next render\n      this._goToPage(pageIndex);\n      return;\n    }\n    const { slidesToShow, slidesToScroll, speed } = this._options;\n\n    let postProcess = false,\n      finalPageIndex = pageIndex;\n    if (pageIndex >= this._pageCount) {\n      finalPageIndex = 0;\n      postProcess = true;\n    } else if (pageIndex < 0) {\n      finalPageIndex = this._pageCount - 1;\n      postProcess = true;\n    }\n    this._currentPage = finalPageIndex;\n    let slideIndex;\n    if (pageIndex >= this._pageCount) {\n      slideIndex = this._slideCount;\n    } else if (pageIndex < 0) {\n      slideIndex = -slidesToShow;\n    } else {\n      slideIndex = pageIndex * slidesToScroll;\n    }\n\n    if (\n      pageIndex === this._pageCount - 1 &&\n      slideIndex > this._slideCount - slidesToShow\n    ) {\n      // last page might be incomplete if slideCount % slidesToShow != 0\n      slideIndex = this._slideCount - slidesToShow;\n    }\n\n    // Clamp slideIndex to prevent going too far in clones\n    slideIndex = Math.min(\n      Math.max(slideIndex, -slidesToShow),\n      this._slideCount,\n    );\n\n    // UPDATE CLASSES\n    this._computeSlidesClasses(slideIndex);\n\n    const slideDOMIndex = slideIndex + this._clonePerSide;\n    this._setCssVar(CSS_VARS.slideDOMIndex, slideDOMIndex);\n    if (postProcess) {\n      // The defered callback occured when we transition to a clone slide\n      // it will translate to the original slide without transition\n      this.__goToPage_defer = () => {\n        delete this.__goToPage_defer;\n        clearTimeout(this.__goToPage_timer);\n        // teleport back to index within bounds (after sliding in clones)\n        this._disableTransition();\n        this._goToPage(finalPageIndex);\n        // Trigger a reflow, flushing the CSS changes\n        this.__forceReflow();\n        // Re-enable CSS after reflow\n        this._enableTransition();\n      };\n      // execute after the transition is complete\n      this.__goToPage_timer = setTimeout(this.__goToPage_defer, speed);\n    }\n  }\n\n  /**\n   * Force browser to trigger a reflow\n   * Useful after CSS changes and before (re)enabling transitions\n   * @private\n   */\n  __forceReflow() {\n    // value must be read to avoid browser optimizations that would skip useless reflow\n    this._reflowTrash = this._track.offsetHeight; // DO NOT REMOVE\n  }\n\n  _enableTransition() {\n    this._track.classList.remove(CLASSES.noTransition);\n  }\n\n  _disableTransition() {\n    this._track.classList.add(CLASSES.noTransition);\n  }\n\n  _computeSize() {\n    const { slidesToShow, transition } = this._options;\n    const cloneCount = 2 * this._clonePerSide;\n    const sliderWidth = this._trackContainer.clientWidth;\n    this._slideWidth = sliderWidth / slidesToShow;\n    this._setCssVar(CSS_VARS.slideWidth, this._slideWidth + 'px');\n    if (transition === TRANSITION.SLIDE) {\n      this._track.style.width = `${(cloneCount + this._slideCount) *\n        this._slideWidth +\n        1000}px`;\n    }\n  }\n\n  _showNext() {\n    const { infinite } = this._options;\n    if (infinite || this._currentPage < this._pageCount - 1) {\n      this._goToPage(this._currentPage + 1);\n    }\n  }\n\n  _showPrev() {\n    const { infinite } = this._options;\n    if (infinite || this._currentPage > 0) {\n      this._goToPage(this._currentPage - 1);\n    }\n  }\n\n  /**\n   * User request to show next slide\n   * @private\n   */\n  _requestNext() {\n    this._stopAutoplay();\n    this._showNext();\n  }\n\n  /**\n   * User request to show prev slide\n   * @private\n   */\n  _requestPrev() {\n    this._stopAutoplay();\n    this._showPrev();\n  }\n\n  /**\n   * User request to show a specific slide\n   * @param index\n   * @private\n   */\n  _requestGoTo(index) {\n    this._stopAutoplay();\n    this._goToPage(index);\n  }\n}\n","export function isInstance(value, klass) {\n  return value instanceof klass;\n}\n\nexport function isInteger(value) {\n  return typeof value === 'number' && !isNaN(value) && isFinite(value);\n}\n\nexport function isBoolean(value) {\n  return typeof value === 'boolean';\n}\n","/**\n * Return an object with the properties that are different in first and second param\n * @param obj1 first object\n * @param obj2 second object\n * @return {{}}\n */\nexport default function objectDiff(obj1, obj2) {\n  let allKeys = Array.from(\n    new Set(Object.keys(obj1).concat(Object.keys(obj2))),\n  );\n  return allKeys.reduce((acc, key) => {\n    if (obj1[key] !== obj2[key]) acc[key] = obj2[key];\n    return acc;\n  }, {});\n}\n","/**\n * pick only a set of properties from an object\n * @param obj source object\n * @param props array of props to pick\n * @return new object with only the picked properties\n */\nexport default function pick(obj, props) {\n  return props.reduce((acc, k) => {\n    if (obj.hasOwnProperty(k)) {\n      acc[k] = obj[k];\n    }\n    return acc;\n  }, {});\n}\n","export default function debounce(callback, delay) {\n  let timeout;\n  return function(...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(callback, delay, ...args);\n  };\n}\n","import Krousel from '../dist/krousel';\n\nfunction makeKrousel({ count = 5, name = '', className, ...config }) {\n  let section = document.createElement('section');\n  if (className) {\n    section.classList.add(className);\n  }\n  let sectionTitle = document.createElement('h1');\n  sectionTitle.innerHTML = name;\n  section.appendChild(sectionTitle);\n  let configDesc = document.createElement('pre');\n  configDesc.innerHTML = JSON.stringify(\n    config,\n    (key, value) => {\n      if (value instanceof HTMLElement) {\n        return value.constructor.name;\n      }\n      return value;\n    },\n    2,\n  );\n  section.appendChild(configDesc);\n  let target = document.createElement('div');\n  section.appendChild(target);\n  new Array(count).fill(null).forEach((__, i) => {\n    let slide = document.createElement('div');\n    let title = document.createElement('h3');\n    title.innerHTML = (i + 1).toString();\n    const color = Math.round((i / count) * 360);\n    title.style.backgroundColor = `hsl(${color}, 60%, 60%)`;\n    slide.appendChild(title);\n    target.append(slide);\n  });\n  document.getElementById('target').appendChild(section);\n  new Krousel(target, config);\n}\n\nconst CONFIGS = [\n  {\n    name: 'Simple demo',\n    count: 5,\n    infinite: false,\n  },\n  {\n    name: 'Infinite loop (default)',\n    count: 5,\n    infinite: true,\n  },\n  {\n    name: 'Transition speed',\n    count: 5,\n    speed: 1000,\n    className: 'slow',\n  },\n  {\n    name: 'Transition Type',\n    count: 5,\n    transition: 'fade',\n  },\n  {\n    name: 'Autoplay (pause when hovered)',\n    count: 2,\n    autoplay: true,\n    autoplaySpeed: 3000,\n    pauseOnHover: true,\n    infinite: true,\n  },\n  {\n    name: 'Disable arrows',\n    count: 5,\n    arrows: false,\n    autoplay: true,\n  },\n  {\n    name: 'Show multiple',\n    count: 5,\n    slidesToShow: 2,\n  },\n  {\n    name: 'Scroll multiple',\n    count: 5,\n    slidesToShow: 2,\n    slidesToScroll: 2,\n  },\n  {\n    name: 'Scroll multiple',\n    count: 25,\n    slidesToShow: 4,\n    slidesToScroll: 3,\n  },\n  {\n    name: 'Hide dots',\n    count: 5,\n    dots: false,\n  },\n  {\n    name: 'Responsive',\n    count: 10,\n    slidesToShow: 3,\n    slidesToScroll: 3,\n    responsive: [\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 400,\n        settings: {\n          infinite: false,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  },\n];\n\nwindow.addEventListener('load', function() {\n  CONFIGS.map(makeKrousel);\n  let section = document.getElementById('hoverEffect');\n  let slider = section.querySelector('.slider');\n  new Krousel(slider, {\n    slidesToShow: 3,\n    appendArrows: slider,\n    appendDots: section,\n  });\n\n  // do krousel with custom inserts\n  section = document.getElementById('customTargets');\n  section.querySelector('pre').innerHTML = `{\n  appendDots: HTMLElement\n  appendArrows: HTMLElement\n}`;\n  new Krousel(section.querySelector('.slider'), {\n    appendDots: section.querySelector('.top-zone'),\n    appendArrows: section.querySelector('.top-zone'),\n  });\n\n  section = document.getElementById('customArrows');\n  section.querySelector('pre').innerHTML = `{\n  prevArrow: HTMLElement\n  nextArrow: HTMLElement\n}`;\n  new Krousel(section.querySelector('.slider'), {\n    prevArrow: section.querySelector('.go-prev'),\n    nextArrow: section.querySelector('.go-next'),\n  });\n});\n"]}